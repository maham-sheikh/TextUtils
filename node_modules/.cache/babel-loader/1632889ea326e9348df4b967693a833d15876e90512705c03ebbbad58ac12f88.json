{"ast":null,"code":"import React,{useState}from\"react\";// Removed the duplicate import\nimport\"./App.css\";import Navbar from\"./components/Navbar\";import TextForm from\"./components/TextForm\";import Alert from\"./components/Alert\";import About from\"./components/About\";import{BrowserRouter as Router,Routes,// Changed from Switch to Routes\nRoute,Link// Link is not used in your code, consider removing it if unnecessary\n}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const[mode,setMode]=useState(\"light\");const[alert,setAlert]=useState(null);const showAlert=(message,type)=>{setAlert({msg:message,type:type});setTimeout(()=>{setAlert(null);},1500);// Clear the alert after 1.5 seconds\n};const toggleMode=()=>{if(mode===\"light\"){setMode(\"dark\");document.body.style.backgroundColor=\"#042743\";showAlert(\"Dark mode has been enabled\",\"success\");}else{setMode(\"light\");document.body.style.backgroundColor=\"white\";showAlert(\"Light mode has been enabled\",\"success\");}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Navbar,{title:\"Textutils\",abouttext:\"About\",mode:mode,toggleMode:toggleMode}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(\"div\",{className:\"container my-3\",children:/*#__PURE__*/_jsxs(Routes,{children:[\" \",/*#__PURE__*/_jsx(Route,{path:\"/about\",element:/*#__PURE__*/_jsx(About,{})}),\" \",/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(TextForm,{heading:\"Enter the text to analyze below\",mode:mode,showAlert:showAlert})}),\" \"]})})]})});}export default App;","map":{"version":3,"names":["React","useState","Navbar","TextForm","Alert","About","BrowserRouter","Router","Routes","Route","Link","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","children","title","abouttext","className","path","element","heading"],"sources":["C:/Users/user/Desktop/react course/textutils/src/App.js"],"sourcesContent":["import React, { useState } from \"react\"; // Removed the duplicate import\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\nimport About from \"./components/About\";\n\nimport {\n  BrowserRouter as Router,\n  Routes, // Changed from Switch to Routes\n  Route,\n  Link, // Link is not used in your code, consider removing it if unnecessary\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500); // Clear the alert after 1.5 seconds\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n\n  return (\n    <>\n      <Router>\n        <Navbar\n          title=\"Textutils\"\n          abouttext=\"About\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Routes>\n            {\" \"}\n            {/* Changed from Switch to Routes */}\n            <Route path=\"/about\" element={<About />} />{\" \"}\n            {/* Changed from component to element */}\n            <Route\n              path=\"/\"\n              element={\n                <TextForm\n                  heading=\"Enter the text to analyze below\"\n                  mode={mode}\n                  showAlert={showAlert}\n                />\n              }\n            />{\" \"}\n            {/* Changed from component to element */}\n          </Routes>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAE;AACzC,MAAO,WAAW,CAClB,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CAEtC,OACEC,aAAa,GAAI,CAAAC,MAAM,CACvBC,MAAM,CAAE;AACRC,KAAK,CACLC,IAAM;AAAA,KACD,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE1B,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGlB,QAAQ,CAAC,OAAO,CAAC,CACzC,KAAM,CAACmB,KAAK,CAAEC,QAAQ,CAAC,CAAGpB,QAAQ,CAAC,IAAI,CAAC,CAExC,KAAM,CAAAqB,SAAS,CAAGA,CAACC,OAAO,CAAEC,IAAI,GAAK,CACnCH,QAAQ,CAAC,CACPI,GAAG,CAAEF,OAAO,CACZC,IAAI,CAAEA,IACR,CAAC,CAAC,CACFE,UAAU,CAAC,IAAM,CACfL,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAAE,IAAI,CAAC,CAAE;AACZ,CAAC,CAED,KAAM,CAAAM,UAAU,CAAGA,CAAA,GAAM,CACvB,GAAIT,IAAI,GAAK,OAAO,CAAE,CACpBC,OAAO,CAAC,MAAM,CAAC,CACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,SAAS,CAC/CT,SAAS,CAAC,4BAA4B,CAAE,SAAS,CAAC,CACpD,CAAC,IAAM,CACLH,OAAO,CAAC,OAAO,CAAC,CAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,OAAO,CAC7CT,SAAS,CAAC,6BAA6B,CAAE,SAAS,CAAC,CACrD,CACF,CAAC,CAED,mBACEV,IAAA,CAAAI,SAAA,EAAAgB,QAAA,cACElB,KAAA,CAACP,MAAM,EAAAyB,QAAA,eACLpB,IAAA,CAACV,MAAM,EACL+B,KAAK,CAAC,WAAW,CACjBC,SAAS,CAAC,OAAO,CACjBhB,IAAI,CAAEA,IAAK,CACXS,UAAU,CAAEA,UAAW,CACxB,CAAC,cACFf,IAAA,CAACR,KAAK,EAACgB,KAAK,CAAEA,KAAM,CAAE,CAAC,cACvBR,IAAA,QAAKuB,SAAS,CAAC,gBAAgB,CAAAH,QAAA,cAC7BlB,KAAA,CAACN,MAAM,EAAAwB,QAAA,EACJ,GAAG,cAEJpB,IAAA,CAACH,KAAK,EAAC2B,IAAI,CAAC,QAAQ,CAACC,OAAO,cAAEzB,IAAA,CAACP,KAAK,GAAE,CAAE,CAAE,CAAC,CAAC,GAAG,cAE/CO,IAAA,CAACH,KAAK,EACJ2B,IAAI,CAAC,GAAG,CACRC,OAAO,cACLzB,IAAA,CAACT,QAAQ,EACPmC,OAAO,CAAC,iCAAiC,CACzCpB,IAAI,CAAEA,IAAK,CACXI,SAAS,CAAEA,SAAU,CACtB,CACF,CACF,CAAC,CAAC,GAAG,EAEA,CAAC,CACN,CAAC,EACA,CAAC,CACT,CAAC,CAEP,CAEA,cAAe,CAAAL,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}