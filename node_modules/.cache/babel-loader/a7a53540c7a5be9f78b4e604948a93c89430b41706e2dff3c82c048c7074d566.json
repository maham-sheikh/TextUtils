{"ast":null,"code":"import React,{useState}from\"react\";import\"./App.css\";import Navbar from\"./components/Navbar\";import TextForm from\"./components/TextForm\";import Alert from\"./components/Alert\";// import About from \"./components/About\";\n// import { BrowserRouter as Router,\n//          Routes, \n//          Route,\n//        } from \"react-router-dom\";\nimport{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[mode,setMode]=useState(\"light\");const[alert,setAlert]=useState(null);const showAlert=(message,type)=>{setAlert({msg:message,type:type});setTimeout(()=>{setAlert(null);},1500);// Clear the alert after 3 seconds\n};const toggleMode=()=>{if(mode===\"light\"){setMode(\"dark\");document.body.style.backgroundColor=\"#042743\";showAlert(\"Dark mode has been enabled\",\"success\");}else{setMode(\"light\");document.body.style.backgroundColor=\"white\";showAlert(\"Light mode has been enabled\",\"success\");}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{title:\"Textutils\",abouttext:\"About\",mode:mode,toggleMode:toggleMode}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(\"div\",{className:\"container my-3\",children:/*#__PURE__*/_jsx(TextForm,{heading:\"Enter the text to analyze below\",mode:mode,showAlert:showAlert})})]});}export default App;","map":{"version":3,"names":["React","useState","Navbar","TextForm","Alert","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","children","title","abouttext","className","heading"],"sources":["C:/Users/user/Desktop/react course/textutils/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\n// import About from \"./components/About\";\n\n// import { BrowserRouter as Router,\n//          Routes, \n//          Route,\n//        } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500); // Clear the alert after 3 seconds\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar\n          title=\"Textutils\"\n          abouttext=\"About\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Routes> */}\n            {/* user--->component1\n            user/home --->componet 2 but if we not write exact load1 */}\n\n            {/* <Route exact path=\"/about\" element={<About />} />\n            <Route\n              exact\n              path=\"/\"\n              element={\n                <TextForm\n                  heading=\"Enter the text to analyze below\"\n                  mode={mode}\n                  showAlert={showAlert}\n                />\n              }\n            />\n          </Routes>\n        </div>\n      </Router> */}\n      <TextForm\n                  heading=\"Enter the text to analyze below\"\n                  mode={mode}\n                  showAlert={showAlert}\n                />\n              </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,WAAW,CAClB,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC;AAEA;AACA;AACA;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEA,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGZ,QAAQ,CAAC,OAAO,CAAC,CACzC,KAAM,CAACa,KAAK,CAAEC,QAAQ,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAExC,KAAM,CAAAe,SAAS,CAAGA,CAACC,OAAO,CAAEC,IAAI,GAAK,CACnCH,QAAQ,CAAC,CACPI,GAAG,CAAEF,OAAO,CACZC,IAAI,CAAEA,IACR,CAAC,CAAC,CACFE,UAAU,CAAC,IAAM,CACfL,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAAE,IAAI,CAAC,CAAE;AACZ,CAAC,CAED,KAAM,CAAAM,UAAU,CAAGA,CAAA,GAAM,CACvB,GAAIT,IAAI,GAAK,OAAO,CAAE,CACpBC,OAAO,CAAC,MAAM,CAAC,CACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,SAAS,CAC/CT,SAAS,CAAC,4BAA4B,CAAE,SAAS,CAAC,CACpD,CAAC,IAAM,CACLH,OAAO,CAAC,OAAO,CAAC,CAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,OAAO,CAC7CT,SAAS,CAAC,6BAA6B,CAAE,SAAS,CAAC,CACrD,CACF,CAAC,CAED,mBACEN,KAAA,CAAAF,SAAA,EAAAkB,QAAA,eAEIpB,IAAA,CAACJ,MAAM,EACLyB,KAAK,CAAC,WAAW,CACjBC,SAAS,CAAC,OAAO,CACjBhB,IAAI,CAAEA,IAAK,CACXS,UAAU,CAAEA,UAAW,CACxB,CAAC,cACFf,IAAA,CAACF,KAAK,EAACU,KAAK,CAAEA,KAAM,CAAE,CAAC,cACvBR,IAAA,QAAKuB,SAAS,CAAC,gBAAgB,CAAAH,QAAA,cAoBjCpB,IAAA,CAACH,QAAQ,EACG2B,OAAO,CAAC,iCAAiC,CACzClB,IAAI,CAAEA,IAAK,CACXI,SAAS,CAAEA,SAAU,CACtB,CAAC,CACC,CAAC,EACd,CAAC,CAEP,CAEA,cAAe,CAAAL,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}